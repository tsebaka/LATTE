inference_dataloader: 
  col_id: customer_id
  dataset_files: 
    - ${hydra:runtime.cwd}/data/train_trx.parquet
    - ${hydra:runtime.cwd}/data/test_trx.parquet
  SeqLenLimit: 
    max_seq_len: 1600
  loader: 
    num_workers: 4
    batch_size: 1000

data_module: 
  _target_: ptls.data_load.data_module.cls_data_module.ClsDataModuleTrain
  distribution_target_task: true
  type: map
  setup: 
    use_files_partially: false
    train_part: 0.5
    test_part: 0.25
    same_file_for_test: true
    dataset_files: 
      train_data_path: ${hydra:runtime.cwd}/data/train_trx.parquet
      test_data_path: ${hydra:runtime.cwd}/data/test_trx.parquet
    col_id: customer_id
    col_id_dtype: int
    col_target: gender
    split_by: embeddings_validation
    fold_info: ${hydra:runtime.cwd}/conf/embeddings_validation.work/folds/folds.json
  train: 
    min_seq_len: 0
    augmentations: 
      - 
        - RandomSlice
        - 
          min_len: 250
          max_len: 350
          rate_for_min: 0.9
      - 
        - DropoutTrx
        - 
          trx_dropout: 0.01
    num_workers: 16
    batch_size: 32
    take_first_fraction: 0.5
  valid: 
    augmentations: 
      - 
        - SeqLenLimit
        - 
          max_seq_len: 1200
    num_workers: 8
    batch_size: 64
    take_first_fraction: 0.5
  test: 
    augmentations: []
    num_workers: 8
    batch_size: 64
    take_first_fraction: 0.5

embedding_validation_results: 
  model_name: nn
  feature_name: target_scores
  output_path: ${hydra:runtime.cwd}/results/fit_target_distribution_results.json

seed_everything: 42

trainer: 
  gpus: 1
  auto_select_gpus: false
  max_epochs: 10
  enable_checkpointing: false
  deterministic: true

logger_name: target_scores

pl_module:
  _target_: ptls.frames.supervised.SequenceToTarget
  distribution_target_task: true
  columns_ix: 
    neg_sum: 0
    neg_distribution: 1
    pos_sum: 2
    pos_distribution: 3
  metric_list:
    - R2n
    - R2p
    - MAPEn
    - MAPEp
    - CEn
    - CEp
    - KLn
    - KLp
  seq_encoder:
    _target_: ptls.frames.supervised.SequenceToTarget
    trx_encoder: 
      _target_: ptls.nn.TrxEncoder
      norm_embeddings: false
      embeddings_noise: 0.003
      embeddings: 
        mcc_code: 
          in: 200
          out: 48
        tr_type: 
          in: 100
          out: 24
      numeric_values: 
        amount: identity
    category_names: 
      - mcc_code
      - tr_type
    category_max_size: 
      mcc_code: 200
      tr_type: 100
    was_logified: true
    log_scale_factor: 1
    hidden_size: 48
    type: gru
    bidir: false
    trainable_starter: static
  head_layers: 
    - 
      - CombinedTargetHeadFromRnn
      - 
        in_size: "{seq_encoder.embedding_size}"
        num_distr_classes: 6
        pos: true
        neg: true
        use_gates: true
        pass_samples: true
  loss:
  optimizer_partial:
    _partial_: true
    _target_: torch.optim.Adam
    lr: 0.005
    weight_decay: 0.0
  lr_scheduler_partial:
    _partial_: true
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 1
    gamma: 0.9
